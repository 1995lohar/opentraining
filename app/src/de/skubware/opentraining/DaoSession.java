package de.skubware.opentraining;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import de.skubware.opentraining.DBTranslation;
import de.skubware.opentraining.DBMuscle;

import de.skubware.opentraining.DBTranslationDao;
import de.skubware.opentraining.DBMuscleDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dBTranslationDaoConfig;
    private final DaoConfig dBMuscleDaoConfig;

    private final DBTranslationDao dBTranslationDao;
    private final DBMuscleDao dBMuscleDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBTranslationDaoConfig = daoConfigMap.get(DBTranslationDao.class).clone();
        dBTranslationDaoConfig.initIdentityScope(type);

        dBMuscleDaoConfig = daoConfigMap.get(DBMuscleDao.class).clone();
        dBMuscleDaoConfig.initIdentityScope(type);

        dBTranslationDao = new DBTranslationDao(dBTranslationDaoConfig, this);
        dBMuscleDao = new DBMuscleDao(dBMuscleDaoConfig, this);

        registerDao(DBTranslation.class, dBTranslationDao);
        registerDao(DBMuscle.class, dBMuscleDao);
    }
    
    public void clear() {
        dBTranslationDaoConfig.getIdentityScope().clear();
        dBMuscleDaoConfig.getIdentityScope().clear();
    }

    public DBTranslationDao getDBTranslationDao() {
        return dBTranslationDao;
    }

    public DBMuscleDao getDBMuscleDao() {
        return dBMuscleDao;
    }

}
